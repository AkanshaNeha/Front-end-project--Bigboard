{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saite\\\\Desktop\\\\Bigboard\\\\Front-end-project--Bigboard\\\\Bigboard\\\\src\\\\InputBox.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './InputBox.css';\n\nclass InputBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputArray: []\n    };\n\n    this.getResults = async (s, v) => {\n      console.log(\"123\");\n      var stockcode;\n      stockcode = document.getElementById(\"stockcode\").value;\n      let startDate = Math.round(new Date().getTime() / 1000);\n      let endDate = startDate - 72 * 3600;\n\n      if (this.state.inputArray.includes(stockcode)) {\n        alert(\"Already Exists\");\n        document.getElementById(\"stockcode\").value = \"\";\n      } else {\n        var val = document.getElementById(\"stockcode\").value;\n\n        if (val === '' || val.length > 4) {\n          alert(\"Please enter correct code\");\n        } else {\n          var resp_data_table = await axios.get('https://finnhub.io/api/v1/quote', {\n            params: {\n              symbol: stockcode,\n              token: 'bu5pnnf48v6qku34c7vg'\n            }\n          });\n          var resp_data_graph = await axios.get('https://finnhub.io/api/v1/stock/candle', {\n            params: {\n              symbol: stockcode,\n              resolution: 5,\n              from: endDate,\n              to: startDate,\n              token: 'bu5pnnf48v6qku34c7vg'\n            }\n          });\n          this.setState({\n            inputArray: this.state.inputArray.concat(stockcode)\n          }, () => {\n            if (resp_data_table.data.c == 0 && resp_data_table.data.h == 0 && resp_data_table.data.l == 0 && resp_data_table.data.o == 0 && resp_data_table.data.pc == 0 && resp_data_table.data.t == 0) {\n              // this.props.getGraphResults(\"no_data\", '');\n              this.props.getGraphResults(\"no_data\", '');\n              console.log(\"no data\"); // add even for getresults\n            } else {\n              // this.props.getGraphResults(true, {stockcode: stockcode, response: resp_data_graph.data});\n              // console.log(resp_data_graph.data);\n              // this.props.getResults(resp_data_table.data);\n              resp_data_table.data.stockcode = stockcode;\n              this.props.getResults(true, {\n                stockcode: stockcode,\n                response: resp_data_table.data\n              });\n              console.log(resp_data_table.data);\n            }\n\n            document.getElementById(\"stockcode\").value = \"\";\n          });\n        }\n      }\n    };\n  }\n\n  convertToUppercase() {\n    var val = document.getElementById(\"stockcode\");\n    val.value = val.value.toUpperCase(); // var val = React.findDOMNode(this.ref.stockcode);\n    // val.value = val.value.toUpperCase();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        id: \"stockcode\",\n        placeholder: \"Enter Stock Code (e.g. AAPL)\",\n        onKeyUp: this.convertToUppercase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark inputbutton\",\n        type: \"submit\",\n        onClick: () => this.getResults(true, ''),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 121\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default InputBox;","map":{"version":3,"sources":["C:/Users/saite/Desktop/Bigboard/Front-end-project--Bigboard/Bigboard/src/InputBox.js"],"names":["React","axios","InputBox","Component","state","inputArray","getResults","s","v","console","log","stockcode","document","getElementById","value","startDate","Math","round","Date","getTime","endDate","includes","alert","val","length","resp_data_table","get","params","symbol","token","resp_data_graph","resolution","from","to","setState","concat","data","c","h","l","o","pc","t","props","getGraphResults","response","convertToUppercase","toUpperCase","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './InputBox.css';\r\nclass InputBox extends React.Component{\r\n    state = {\r\n        inputArray: []\r\n    };\r\n    getResults = async(s, v) => {\r\n        console.log(\"123\");\r\n        var stockcode;\r\n      \r\n        stockcode = document.getElementById(\"stockcode\").value;\r\n        let startDate = Math.round(new Date().getTime() / 1000);\r\n        let endDate = startDate - (72 * 3600);\r\n        if(this.state.inputArray.includes(stockcode)){\r\n            alert(\"Already Exists\");\r\n            document.getElementById(\"stockcode\").value = \"\";\r\n        }\r\n        else{\r\n                var val = document.getElementById(\"stockcode\").value;\r\n                if(val === '' || val.length>4){\r\n                    alert(\"Please enter correct code\");\r\n                }\r\n                else{\r\n                    var resp_data_table = await axios.get('https://finnhub.io/api/v1/quote', {\r\n                        params: {\r\n                            symbol: stockcode,\r\n                            token: 'bu5pnnf48v6qku34c7vg'\r\n                        }\r\n                    });\r\n                    var resp_data_graph = await axios.get('https://finnhub.io/api/v1/stock/candle',{\r\n                        params:{\r\n                            symbol: stockcode,\r\n                            resolution: 5,\r\n                            from: endDate,\r\n                            to: startDate,\r\n                            token: 'bu5pnnf48v6qku34c7vg'\r\n                        }\r\n                    });\r\n                    this.setState({inputArray: this.state.inputArray.concat(stockcode)},\r\n                    () => {\r\n                        if(resp_data_table.data.c == 0 && resp_data_table.data.h == 0 && resp_data_table.data.l == 0 && resp_data_table.data.o == 0 && resp_data_table.data.pc == 0 && resp_data_table.data.t == 0){\r\n                            // this.props.getGraphResults(\"no_data\", '');\r\n                            this.props.getGraphResults(\"no_data\", '');\r\n                            console.log(\"no data\");\r\n                            // add even for getresults\r\n                        }\r\n                        else{\r\n                            // this.props.getGraphResults(true, {stockcode: stockcode, response: resp_data_graph.data});\r\n                            // console.log(resp_data_graph.data);\r\n                            // this.props.getResults(resp_data_table.data);\r\n                            resp_data_table.data.stockcode = stockcode;\r\n                            this.props.getResults(true, {stockcode: stockcode, response: resp_data_table.data});\r\n                            console.log(resp_data_table.data)\r\n                        }\r\n                        document.getElementById(\"stockcode\").value = \"\";\r\n                    });\r\n                }\r\n        }\r\n        \r\n       \r\n        \r\n    };\r\n    convertToUppercase() {\r\n        var val = document.getElementById(\"stockcode\");\r\n        val.value = val.value.toUpperCase();\r\n        // var val = React.findDOMNode(this.ref.stockcode);\r\n        // val.value = val.value.toUpperCase();\r\n    };\r\n    render(){\r\n        return (\r\n            \r\n                <div className=\"form-group\">\r\n\r\n                    <input className=\"form-control\" type=\"text\" id=\"stockcode\"  placeholder=\"Enter Stock Code (e.g. AAPL)\"  onKeyUp={ this.convertToUppercase}></input>\r\n                    <button className=\"btn btn-dark inputbutton\" type=\"submit\" onClick={ ()=> this.getResults(true,'')}><i class=\"fa fa-search\"></i></button>\r\n\r\n\r\n\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}