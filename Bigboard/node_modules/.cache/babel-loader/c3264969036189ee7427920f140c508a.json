{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saite\\\\Desktop\\\\Bigboard\\\\Front-end-project--Bigboard\\\\Bigboard\\\\src\\\\GraphBox.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\"; // import Plot from 'react-plotly.js';\n\nimport \"./GraphBox.css\";\nimport moment from \"moment\";\n\nclass GraphBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate(pP) {\n    if (pP.currentStockCode !== this.props.currentStockCode) {\n      // console.log(this.props.currentStockCode);\n      // console.log(this.props.alter_Graph)\n      if (this.props.alter_Graph === false) {\n        let startDate = Math.round(new Date().getTime() / 1000);\n        let endDate = startDate - 72 * 3600;\n      } else {\n        let startDate = this.props.dates.endDate;\n        let endDate = this.props.dates.startDate;\n      }\n\n      const pointerToThis = this;\n      axios.get(\"https://finnhub.io/api/v1/stock/candle\", {\n        params: {\n          symbol: this.props.currentStockCode,\n          resolution: 5,\n          from: endDate,\n          to: startDate,\n          token: \"bu5pnnf48v6qku34c7vg\"\n        }\n      }).then(response => {\n        console.log(response); // console.log({ JSON.stringify(new Date(response.data.t * 1000)).split('T')[0].replace('\"', '') });\n\n        var unix_time = response.data.t;\n        var i;\n        var x = []; // console.log(unix_time);\n\n        for (i = 0; i < unix_time.length; i++) {\n          var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\n          x.push(time);\n        }\n\n        var y = response.data.c; // console.log(typeof(y[0]));\n\n        var lowOrHighColor = y[0] < y[y.length - 1] ? \"#81b737\" : \"#d54f4f\";\n        this.setState({\n          symbol: this.props.currentStockCode,\n          text: \"in the last 72 Hours\",\n          Data: {\n            labels: x,\n            datasets: [{\n              label: \"Stock Price\",\n              data: y,\n              fill: true,\n              lineTension: 0.1,\n              backgroundColor: lowOrHighColor,\n              borderColor: lowOrHighColor,\n              borderCapStyle: \"butt\",\n              borderJoinStyle: \"miter\",\n              pointBorderColor: lowOrHighColor,\n              pointBackgroundColor: lowOrHighColor,\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: lowOrHighColor,\n              pointHoverBorderColor: lowOrHighColor,\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 10\n            }]\n          }\n        });\n      }).catch(error => {\n        console.log(error.response);\n      });\n    } else if (pP.dates != this.props.dates) {\n      if (this.props.alter_Graph === false) {\n        var startDate = Math.round(new Date().getTime() / 1000);\n        var endDate = startDate - 72 * 3600;\n      } else {\n        var startDate = this.props.dates.endDate;\n        var endDate = this.props.dates.startDate;\n      }\n\n      const pointerToThis = this;\n      axios.get(\"https://finnhub.io/api/v1/stock/candle\", {\n        params: {\n          symbol: this.props.currentStockCode,\n          resolution: 5,\n          from: endDate,\n          to: startDate,\n          token: \"bu5pnnf48v6qku34c7vg\"\n        }\n      }).then(response => {\n        console.log(response.data);\n\n        if (response.data.s == \"no_data\") {\n          // const alert = useAlert();\n          alert(\"No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.\");\n        } else {\n          var unix_time = response.data.t;\n          var i;\n          var x = [];\n\n          for (i = 0; i < unix_time.length; i++) {\n            var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\n            x.push(time);\n          }\n\n          var text = \"between \" + String(x[0]).slice(0, 10) + \" to \" + String(x[x.length - 1].slice(0, 10));\n          var y = response.data.c;\n          var lowOrHighColor = y[0] < y[y.length - 1] ? \"#81b737\" : \"#d54f4f\";\n          this.setState({\n            text: text,\n            symbol: this.props.currentStockCode,\n            Data: {\n              labels: x,\n              datasets: [{\n                label: \"Stock Price\",\n                data: y,\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: lowOrHighColor,\n                borderColor: lowOrHighColor,\n                borderCapStyle: \"butt\",\n                borderJoinStyle: \"miter\",\n                pointBorderColor: lowOrHighColor,\n                pointBackgroundColor: lowOrHighColor,\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: lowOrHighColor,\n                pointHoverBorderColor: lowOrHighColor,\n                pointHoverBorderWidth: 2,\n                pointRadius: 2,\n                pointHitRadius: 10\n              }]\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error.response);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Price per share of \", this.state.symbol, \" \", this.state.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.Data,\n        height: 300,\n        width: 400,\n        options: {\n          layout: {\n            padding: {\n              right: 20\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                display: false //this will remove only the label\n\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\",\n                fontColor: \"rgb(0, 35, 80)\",\n                fontfamily: \"New Century Schoolbook, teX Gyre Schola, serif\",\n                fontsize: 12\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Stock Price ($)\",\n                fontColor: \"rgb(0, 35, 80)\",\n                fontfamily: \"New Century Schoolbook, teX Gyre Schola, serif\",\n                fontsize: 12\n              },\n              ticks: {\n                display: true,\n                fontColor: \"black\"\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n            labels: {\n              fontColor: \"rgb(0, 35, 80)\",\n              fontSize: 12,\n              fontfamily: \"New Century Schoolbook, teX Gyre Schola, serif\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GraphBox;","map":{"version":3,"sources":["C:/Users/saite/Desktop/Bigboard/Front-end-project--Bigboard/Bigboard/src/GraphBox.js"],"names":["React","axios","Line","moment","GraphBox","Component","constructor","props","state","componentDidUpdate","pP","currentStockCode","alter_Graph","startDate","Math","round","Date","getTime","endDate","dates","pointerToThis","get","params","symbol","resolution","from","to","token","then","response","console","log","unix_time","data","t","i","x","length","time","unix","format","push","y","c","lowOrHighColor","setState","text","Data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","catch","error","s","alert","String","slice","render","layout","padding","right","responsive","maintainAspectRatio","scales","xAxes","gridLines","display","ticks","scaleLabel","labelString","fontColor","fontfamily","fontsize","yAxes","legend","position","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\n// import Plot from 'react-plotly.js';\r\nimport \"./GraphBox.css\";\r\nimport moment from \"moment\";\r\nclass GraphBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidUpdate(pP) {\r\n    if (pP.currentStockCode !== this.props.currentStockCode) {\r\n      // console.log(this.props.currentStockCode);\r\n      // console.log(this.props.alter_Graph)\r\n      if (this.props.alter_Graph === false) {\r\n        let startDate = Math.round(new Date().getTime() / 1000);\r\n        let endDate = startDate - 72 * 3600;\r\n      } else {\r\n        let startDate = this.props.dates.endDate;\r\n        let endDate = this.props.dates.startDate;\r\n      }\r\n      const pointerToThis = this;\r\n      axios\r\n        .get(\"https://finnhub.io/api/v1/stock/candle\", {\r\n          params: {\r\n            symbol: this.props.currentStockCode,\r\n            resolution: 5,\r\n            from: endDate,\r\n            to: startDate,\r\n            token: \"bu5pnnf48v6qku34c7vg\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          // console.log({ JSON.stringify(new Date(response.data.t * 1000)).split('T')[0].replace('\"', '') });\r\n          var unix_time = response.data.t;\r\n          var i;\r\n          var x = [];\r\n          // console.log(unix_time);\r\n          for (i = 0; i < unix_time.length; i++) {\r\n            var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n            x.push(time);\r\n          }\r\n          var y = response.data.c;\r\n          // console.log(typeof(y[0]));\r\n          var lowOrHighColor = y[0] < y[y.length - 1] ? \"#81b737\" : \"#d54f4f\";\r\n          this.setState({\r\n            symbol: this.props.currentStockCode,\r\n            text: \"in the last 72 Hours\",\r\n            Data: {\r\n              labels: x,\r\n              datasets: [\r\n                {\r\n                  label: \"Stock Price\",\r\n                  data: y,\r\n                  fill: true,\r\n                  lineTension: 0.1,\r\n                  backgroundColor: lowOrHighColor,\r\n                  borderColor: lowOrHighColor,\r\n                  borderCapStyle: \"butt\",\r\n                  borderJoinStyle: \"miter\",\r\n                  pointBorderColor: lowOrHighColor,\r\n                  pointBackgroundColor: lowOrHighColor,\r\n                  pointBorderWidth: 1,\r\n                  pointHoverRadius: 5,\r\n                  pointHoverBackgroundColor: lowOrHighColor,\r\n                  pointHoverBorderColor: lowOrHighColor,\r\n                  pointHoverBorderWidth: 2,\r\n                  pointRadius: 2,\r\n                  pointHitRadius: 10,\r\n                },\r\n              ],\r\n            },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } else if (pP.dates != this.props.dates) {\r\n      if (this.props.alter_Graph === false) {\r\n        var startDate = Math.round(new Date().getTime() / 1000);\r\n        var endDate = startDate - 72 * 3600;\r\n      } else {\r\n        var startDate = this.props.dates.endDate;\r\n        var endDate = this.props.dates.startDate;\r\n      }\r\n      const pointerToThis = this;\r\n      axios\r\n        .get(\"https://finnhub.io/api/v1/stock/candle\", {\r\n          params: {\r\n            symbol: this.props.currentStockCode,\r\n            resolution: 5,\r\n            from: endDate,\r\n            to: startDate,\r\n            token: \"bu5pnnf48v6qku34c7vg\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          if (response.data.s == \"no_data\") {\r\n            // const alert = useAlert();\r\n            alert(\r\n              \"No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.\"\r\n            );\r\n          } else {\r\n            var unix_time = response.data.t;\r\n            var i;\r\n            var x = [];\r\n            for (i = 0; i < unix_time.length; i++) {\r\n              var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n              x.push(time);\r\n            }\r\n            var text =\r\n              \"between \" +\r\n              String(x[0]).slice(0, 10) +\r\n              \" to \" +\r\n              String(x[x.length - 1].slice(0, 10));\r\n            var y = response.data.c;\r\n            var lowOrHighColor = y[0] < y[y.length - 1] ? \"#81b737\" : \"#d54f4f\";\r\n            this.setState({\r\n              text: text,\r\n              symbol: this.props.currentStockCode,\r\n              Data: {\r\n                labels: x,\r\n                datasets: [\r\n                  {\r\n                    label: \"Stock Price\",\r\n                    data: y,\r\n                    fill: true,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: lowOrHighColor,\r\n                    borderColor: lowOrHighColor,\r\n                    borderCapStyle: \"butt\",\r\n                    borderJoinStyle: \"miter\",\r\n                    pointBorderColor: lowOrHighColor,\r\n                    pointBackgroundColor: lowOrHighColor,\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: lowOrHighColor,\r\n                    pointHoverBorderColor: lowOrHighColor,\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 2,\r\n                    pointHitRadius: 10,\r\n                  },\r\n                ],\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response)\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"graphClass\">\r\n        <h5>\r\n          Price per share of {this.state.symbol} {this.state.text}{\" \"}\r\n        </h5>\r\n        <Line\r\n          data={this.state.Data}\r\n          height={300}\r\n          width={400}\r\n          options={{\r\n            layout: {\r\n              padding: {\r\n                right: 20,\r\n              },\r\n            },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  ticks: {\r\n                    display: false, //this will remove only the label\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n\r\n                    labelString: \"Time\",\r\n                    fontColor: \"rgb(0, 35, 80)\",\r\n                    fontfamily:\r\n                      \"New Century Schoolbook, teX Gyre Schola, serif\",\r\n                    fontsize: 12,\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: \"Stock Price ($)\",\r\n                    fontColor: \"rgb(0, 35, 80)\",\r\n                    fontfamily:\r\n                      \"New Century Schoolbook, teX Gyre Schola, serif\",\r\n                    fontsize: 12,\r\n                  },\r\n                  ticks: {\r\n                    display: true,\r\n                    fontColor: \"black\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n              labels: {\r\n                fontColor: \"rgb(0, 35, 80)\",\r\n                fontSize: 12,\r\n                fontfamily: \"New Century Schoolbook, teX Gyre Schola, serif\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GraphBox;\r\n"]},"metadata":{},"sourceType":"module"}