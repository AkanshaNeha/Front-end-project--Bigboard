{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saite\\\\Desktop\\\\Front-end-project--Bigboard\\\\Bigboard\\\\src\\\\GraphBox.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Line } from \"react-chartjs-2\";\nimport './GraphBox.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GraphBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: {}\n    };\n  }\n\n  componentDidUpdate(pP) {\n    if (pP.currentStockCode !== this.props.currentStockCode) {\n      if (this.props.alter_Graph === false) {\n        var startDate = Math.round(new Date().getTime() / 1000);\n        var endDate = startDate - 72 * 3600;\n      } else {\n        startDate = this.props.dates.endDate;\n        endDate = this.props.dates.startDate;\n      } //const pointerToThis = this;\n\n\n      axios.get('https://finnhub.io/api/v1/stock/candle', {\n        params: {\n          symbol: this.props.currentStockCode,\n          resolution: 5,\n          from: endDate,\n          to: startDate,\n          token: 'bu5pnnf48v6qku34c7vg'\n        }\n      }).then(response => {\n        console.log(response);\n        var unix_time = response.data.t;\n        var i;\n        var x = [];\n\n        for (i = 0; i < unix_time.length; i++) {\n          var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\n          x.push(time);\n        }\n\n        var y = response.data.c;\n        var lowOrHighColor = y[0] < y[y.length - 1] ? '#81b737' : '#d54f4f';\n        this.setState({\n          symbol: this.props.currentStockCode,\n          text: 'in the last 72 Hours',\n          Data: {\n            labels: x,\n            datasets: [{\n              label: \"Stock Price\",\n              data: y,\n              fill: true,\n              lineTension: 0.1,\n              backgroundColor: lowOrHighColor,\n              borderColor: lowOrHighColor,\n              borderCapStyle: \"butt\",\n              borderJoinStyle: \"miter\",\n              pointBorderColor: lowOrHighColor,\n              pointBackgroundColor: lowOrHighColor,\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: lowOrHighColor,\n              pointHoverBorderColor: lowOrHighColor,\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 10\n            }]\n          }\n        });\n      }).catch(error => {\n        console.log(error.response);\n      });\n    } else if (pP.dates !== this.props.dates) {\n      if (this.props.alter_Graph === false) {\n        startDate = Math.round(new Date().getTime() / 1000);\n        endDate = startDate - 72 * 3600;\n      } else {\n        startDate = this.props.dates.endDate;\n        endDate = this.props.dates.startDate;\n      } //const pointerToThis = this;\n\n\n      axios.get('https://finnhub.io/api/v1/stock/candle', {\n        params: {\n          symbol: this.props.currentStockCode,\n          resolution: 5,\n          from: endDate,\n          to: startDate,\n          token: 'bu5pnnf48v6qku34c7vg'\n        }\n      }).then(response => {\n        console.log(response.data);\n\n        if (response.data.s === \"no_data\") {\n          alert('No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.');\n        } else {\n          var unix_time = response.data.t;\n          var i;\n          var x = [];\n\n          for (i = 0; i < unix_time.length; i++) {\n            var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\n            x.push(time);\n          }\n\n          var text = 'between ' + String(x[0]).slice(0, 10) + ' to ' + String(x[x.length - 1].slice(0, 10));\n          var y = response.data.c;\n          var lowOrHighColor = y[0] < y[y.length - 1] ? '#81b737' : '#d54f4f';\n          this.setState({\n            text: text,\n            symbol: this.props.currentStockCode,\n            Data: {\n              labels: x,\n              datasets: [{\n                label: \"Stock Price\",\n                data: y,\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: lowOrHighColor,\n                borderColor: lowOrHighColor,\n                borderCapStyle: \"butt\",\n                borderJoinStyle: \"miter\",\n                pointBorderColor: lowOrHighColor,\n                pointBackgroundColor: lowOrHighColor,\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: lowOrHighColor,\n                pointHoverBorderColor: lowOrHighColor,\n                pointHoverBorderWidth: 2,\n                pointRadius: 2,\n                pointHitRadius: 10\n              }]\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error.response);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Price per share of \", this.state.symbol, \" \", this.state.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.Data,\n        height: 300,\n        width: 400,\n        options: {\n          layout: {\n            padding: {\n              right: 10\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                display: false //this will remove only the label\n\n              },\n              scaleLabel: {\n                display: true,\n                labelString: 'Time',\n                fontColor: 'rgb(0, 35, 80)',\n                fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\n                fontSize: 12\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: 'Stock Price ($)',\n                fontColor: 'rgb(0, 35, 80)',\n                fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\n                fontSize: 12\n              },\n              ticks: {\n                display: true,\n                fontColor: 'black'\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              fontColor: 'rgb(0, 35, 80)',\n              fontSize: 12,\n              fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GraphBox;","map":{"version":3,"sources":["C:/Users/saite/Desktop/Front-end-project--Bigboard/Bigboard/src/GraphBox.js"],"names":["React","axios","Line","moment","GraphBox","Component","constructor","props","state","Data","componentDidUpdate","pP","currentStockCode","alter_Graph","startDate","Math","round","Date","getTime","endDate","dates","get","params","symbol","resolution","from","to","token","then","response","console","log","unix_time","data","t","i","x","length","time","unix","format","push","y","c","lowOrHighColor","setState","text","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","catch","error","s","alert","String","slice","render","layout","padding","right","responsive","maintainAspectRatio","scales","xAxes","gridLines","display","ticks","scaleLabel","labelString","fontColor","fontfamily","fontSize","yAxes","legend","position"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport './GraphBox.css';\r\nimport moment from 'moment';\r\nclass GraphBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          Data:{}\r\n        };}\r\n    componentDidUpdate(pP){\r\n        if(pP.currentStockCode !== this.props.currentStockCode){\r\n            if (this.props.alter_Graph===false){\r\n              var startDate = Math.round(new Date().getTime() / 1000);\r\n              var endDate = startDate - (72 * 3600);\r\n            }\r\n            else{\r\n              startDate = this.props.dates.endDate;\r\n              endDate = this.props.dates.startDate;\r\n            }\r\n            //const pointerToThis = this;\r\n            axios.get('https://finnhub.io/api/v1/stock/candle',{              \r\n            params:{\r\n                symbol: this.props.currentStockCode,\r\n                resolution: 5,\r\n                from: endDate,\r\n                to: startDate,\r\n                token: 'bu5pnnf48v6qku34c7vg'\r\n            }})\r\n            .then((response) => {\r\n              console.log(response);\r\n              var unix_time = response.data.t;\r\n              var i;\r\n              var x=[];\r\n                for (i = 0; i < unix_time.length; i++) {\r\n                  var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n                  x.push(time)\r\n                }\r\n              var y = response.data.c;\r\n              var lowOrHighColor = y[0] < y[y.length - 1] \r\n                ? '#81b737' : '#d54f4f';\r\n              this.setState({\r\n                  symbol: this.props.currentStockCode,\r\n                  text: 'in the last 72 Hours',\r\n                  Data: {\r\n                    labels: x,\r\n                    datasets: [\r\n                      {\r\n                        label: \"Stock Price\",\r\n                        data: y,\r\n                        fill: true,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: lowOrHighColor,\r\n                        borderColor: lowOrHighColor,\r\n                        borderCapStyle: \"butt\",\r\n                        borderJoinStyle: \"miter\",\r\n                        pointBorderColor: lowOrHighColor,\r\n                        pointBackgroundColor: lowOrHighColor,\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: lowOrHighColor,\r\n                        pointHoverBorderColor: lowOrHighColor,\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 2,\r\n                        pointHitRadius: 10,\r\n                      },\r\n                    ],\r\n                  },\r\n                });\r\n            })\r\n            .catch(error => {\r\n              console.log(error.response)\r\n            });\r\n        }\r\n        else if(pP.dates !== this.props.dates){\r\n          if (this.props.alter_Graph===false){\r\n            startDate = Math.round(new Date().getTime() / 1000);\r\n            endDate = startDate - (72 * 3600);\r\n            \r\n          }\r\n          else{\r\n            startDate = this.props.dates.endDate;\r\n            endDate = this.props.dates.startDate;\r\n          }\r\n          //const pointerToThis = this;\r\n        axios.get('https://finnhub.io/api/v1/stock/candle',{\r\n            \r\n          params:{\r\n              symbol: this.props.currentStockCode,\r\n              resolution: 5,\r\n              from: endDate,\r\n              to: startDate,\r\n              token: 'bu5pnnf48v6qku34c7vg'\r\n\r\n          }\r\n        }\r\n        )\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.s===\"no_data\")\r\n            {\r\n              alert('No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.');\r\n            }\r\n            else{\r\n              var unix_time = response.data.t;\r\n              var i;\r\n              var x=[];\r\n              for (i = 0; i < unix_time.length; i++) \r\n              {\r\n                var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n                x.push(time)\r\n              }\r\n              var text='between '+String(x[0]).slice(0,10)+' to '+String(x[x.length-1].slice(0,10))\r\n              var y = response.data.c;\r\n              var lowOrHighColor = y[0] < y[y.length - 1] \r\n                ? \r\n                '#81b737' : '#d54f4f';\r\n              this.setState({\r\n                text: text,\r\n                symbol: this.props.currentStockCode,\r\n                Data: {\r\n                  labels: x,\r\n                  datasets: \r\n                  [\r\n                    {\r\n                      label: \"Stock Price\",\r\n                      data: y,\r\n                      fill: true,\r\n                      lineTension: 0.1,\r\n                      backgroundColor: lowOrHighColor,\r\n                      borderColor: lowOrHighColor,\r\n                      borderCapStyle: \"butt\",\r\n                      borderJoinStyle: \"miter\",\r\n                      pointBorderColor: lowOrHighColor,\r\n                      pointBackgroundColor: lowOrHighColor,\r\n                      pointBorderWidth: 1,\r\n                      pointHoverRadius: 5,\r\n                      pointHoverBackgroundColor: lowOrHighColor,\r\n                      pointHoverBorderColor: lowOrHighColor,\r\n                      pointHoverBorderWidth: 2,\r\n                      pointRadius: 2,\r\n                      pointHitRadius: 10,\r\n                    },\r\n                  ],\r\n                },\r\n              }\r\n              );\r\n            }\r\n          }\r\n          )\r\n          .catch(error => {\r\n            console.log(error.response)\r\n            }\r\n            );\r\n        }\r\n\r\n      }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"graphClass\">\r\n                <h5>Price per share of {this.state.symbol} {this.state.text} </h5>\r\n                <Line\r\n                data={this.state.Data}\r\n                height={300}\r\n                width ={400}\r\n                options={{\r\n                  layout:{\r\n                    padding:{\r\n                      right : 10 \r\n                    }\r\n                  },\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n    \r\n                  scales: {\r\n                    xAxes: [{\r\n                      gridLines: {\r\n                         display: false\r\n                      },\r\n                      ticks: {\r\n                        display: false //this will remove only the label\r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time',\r\n                        fontColor: 'rgb(0, 35, 80)',\r\n                        fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                        fontSize: 12\r\n                      }\r\n                   }],\r\n                    yAxes: [{\r\n                      gridLines: {\r\n                         display: false,\r\n                         \r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Stock Price ($)',\r\n                        fontColor: 'rgb(0, 35, 80)',\r\n                        fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                        fontSize: 12\r\n                      },\r\n                      ticks: {\r\n                        display: true,\r\n                        fontColor: 'black'\r\n\r\n                   }\r\n                  }\r\n                ],\r\n                  },\r\n                  legend: {\r\n                      display: true,\r\n                      position: 'top',\r\n                    labels: {\r\n                      fontColor: 'rgb(0, 35, 80)',\r\n                      fontSize: 12,\r\n                      fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n\r\n        );\r\n    };\r\n}\r\nexport default GraphBox;"]},"metadata":{},"sourceType":"module"}